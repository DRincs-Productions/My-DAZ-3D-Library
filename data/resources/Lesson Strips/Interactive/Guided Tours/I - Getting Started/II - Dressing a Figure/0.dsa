// DAZ Studio version 4.10.0.123 filetype DAZ Script
/**********************************************************************
 
	Copyright (C) 2002-2023 Daz 3D, Inc. All Rights Reserved.
 
	This script is provided as part of the Daz Script Documentation. The
	contents of this script, and\or any portion thereof, may only be used
	in accordance with the following license:
 
	Creative Commons Attribution 3.0 Unported (CC BY 3.0)
	- http://creativecommons.org/licenses/by/3.0
 
	To contact Daz 3D or for more information about Daz Script visit the
	Daz 3D website:
 
	- http://www.daz3d.com
 
**********************************************************************/
// Source: ./resources/Lesson Strips/Common/Interactive.dsa

// Define an anonymous function;
// serves as our main loop,
// limits the scope of variables
( function(){
	
	// If the version number is less than required; 4.10.0.123
	if( App.version64 < 0x0004000a0000007b ){
		// Inform the user
		MessageBox.information( qsTr("%1 4.10.0.123 or newer is required to continue.\nCurrent version: %2.")
			.arg( App.appName ).arg( App.longVersionString ),
			qsTr("Resource Error"), qsTr("&OK") );
		// We're done...
		return;
	}
	
	// Create a file info object for easy access
	var g_oFile = new DzFileInfo( getScriptFileName() );
	
	// Get the path of our include script. Doing it this way, we can debug
	// with an ascii file and ship a binary [encrypted] file with the same
	// name... without having to update the contents of the script or manually
	// handle the file extensions.
	var g_sInclude = String( "%1/Lesson Strips/Common/Interactive" ).arg( App.getResourcesPath() );
	var g_oScript = new DzScript();
	var g_sIncludeFull = g_oScript.getScriptFile( g_sInclude );
	
	// If our script was not found
	if( g_sIncludeFull.isEmpty() ){
		// Inform the user
		MessageBox.information( qsTr("%1 : Could not find \"%2\"").arg( g_oFile.baseName() ).arg( g_sInclude ),
			qsTr("Critical Error"), qsTr("&OK") );
		
		// We're done...
		return;
	}
	
	// Include the script
	include( g_sIncludeFull );
	
	// Define the arrary of interactive lesson instructions
	var aInstructions = [];
	
	var sContinue = qsTr("Continue");
	var nWidth = 355;
	
	var sRenderer = "NVIDIA Iray";
	
	var sActionClass = "DzOpenAction";
	var oInstruction = actionSelect(
		sActionClass,
		qsTr("Open the Scene"),
		qsTr("It is now time to dress our figure. First, open the //Barefoot Dancer// scene that you " +
			"created and saved in the last lesson.\n\n" +
			"Select the ##%1.label## action in the toolbar or under the ##%1.menu## menu " +
			"from the **Main Menu Bar**.\n\n" +
			"If the scene is already open, select //%2//.")
				.arg( sActionClass )
				.arg( sContinue ),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = renderSettingsPaneEditorRendererSelect(
		sRenderer,
		qsTr("Change the Active Renderer"),
		qsTr("Since this tutorial is specifically made for the //%1// render engine, " +
			"you will need to switch the active renderer to //%1//.\n\n" +
			"If you are running %2 (32-bit), you will not be able " +
			"to finish this lesson because //%1// is not available in this version of %2. " +
			"Please see the //Barefoot Dancer 3Delight// lesson.")
				.arg( sRenderer )
				.arg( App.appName ),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	var sTitle = qsTr("Filter By Context");
	var sDescription = qsTr("Open the **Smart Content** pane and make sure that //%1// " +
			"is checked in the bottom left corner.\n\n" +
			"When //%1// is checked, only content that is compatible with the highlighted " +
			"item in the **Scene** pane will appear in the **Smart Content** pane.")
				.arg( sTitle );
	var sNote = "";
	var bValue = true;
	if( typeof( smartContentPaneFilesFilterByContext ) == "function" ){
		oInstruction = smartContentPaneFilesFilterByContext(
			bValue, sTitle, sDescription, sNote, nWidth );
	} else {
		oInstruction = createInstruction(
			g_sWidgetType,
			"SmartContent.SmartContentFileContentTab.ContentTabFilterByContextCbx",
			sTitle, sDescription, sNote, nWidth, "", false );
		oInstruction = requireValue( oInstruction, bValue );
	}
	aInstructions.push( oInstruction );
	
	
	oInstruction = scenePaneNodeSelect(
		"Genesis 8 Female",
		qsTr("Dressing Your Figure"),
		qsTr("You will need to select //Genesis 8 Female// in the **Scene** pane " +
			"before loading the clothing."),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = smartContentPaneAssetLoad(
		"/Default/Wardrobe/Shirts/Rocker Top.duf",
		"/People/Genesis 8 Female/Clothing/Rocker Outfit/Rocker Top.duf",
		"Rocker Outfit for Genesis 3 Female(s) and Genesis 8 Female(s)",
		41753,
		qsTr("Dressing Your Figure"),
		qsTr("You can now add clothing, hair, or props to your character.\n\n" +
			"To add the clothing, go to the **Smart Content** pane, under the **Wardrobe " +
			" > Shirts** category, and double-click the //Rocker Top// icon."),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = smartContentPaneAssetLoad(
		"/Default/Wardrobe/Skirts/Rocker Skirt.duf",
		"/People/Genesis 8 Female/Clothing/Rocker Outfit/Rocker Skirt.duf",
		"Rocker Outfit for Genesis 3 Female(s) and Genesis 8 Female(s)",
		41753,
		qsTr("Dressing Your Character"),
		qsTr("Now, go to the **Smart Content** pane, under the **Wardrobe > Skirts** category, " +
			"and double-click the //Rocker Skirt// icon."),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = scenePaneNodeSelect(
		"Rocker Top G8",
		qsTr("Changing Clothing Textures"),
		qsTr("You can now change the material of the clothing.\n\n" +
			"To do this, select //Rocker Top G8// in the **Scene** pane. "),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = smartContentPaneAssetLoad(
		"/Default/Materials",
		"/People/Genesis 8 Female/Clothing/Rocker Outfit/Materials/Iray/Controlled Four Shirt.duf",
		"Rocker Outfit for Genesis 3 Female(s) and Genesis 8 Female(s)",
		41753,
		qsTr("Changing Clothing Textures"),
		qsTr("Follow the arrows in the **Smart Content** pane and double-click the material " +
			"you would like to use.\n\n" +
			"With the //Rocker Top//, you will see a MDL material option. This is for " +
			"rendering with the //%1// render engine. There is also a RSL material option, however, " +
			"this is used for the 3Delight render engine.\n\n" +
			"In this tutorial, you are going to render with the //%1// render engine " +
			"so you will want to double-click the MDL material.")
				.arg( sRenderer ),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = scenePaneNodeSelect(
		"Rocker Skirt G8",
		qsTr("Changing Clothing Textures"),
		qsTr("After the material for the Rocker Shirt is added, select //Rocker Skirt G8// " +
			"in the **Scene** pane. "),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = smartContentPaneAssetLoad(
		"/Default/Materials/Iray/Wardrobe/Controlled Four Skirt.duf",
		"/People/Genesis 8 Female/Clothing/Rocker Outfit/Materials/Iray/Controlled Four Skirt.duf",
		"Rocker Outfit for Genesis 3 Female(s) and Genesis 8 Female(s)",
		41753,
		qsTr("Changing Clothing Textures"),
		qsTr("Go to the **Smart Content** pane and apply the //%1// (MDL) material to the skirt.")
			.arg( sRenderer ),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = scenePaneNodeSelect(
		"Genesis 8 Female",
		qsTr("Loading Hair onto Your Figure"),
		qsTr("Your character is now dressed, but she is still bald!\n\n" +
			"Before adding the hair, you will need to select //Genesis 8 Female// " +
			"in the **Scene** pane."),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = smartContentPaneAssetLoad(
		"/Default/Hair/Short/Toulouse Hair.duf",
		"/People/Genesis 8 Female/Hair/Toulouse Hair/Toulouse Hair.duf",
		"Genesis 8 Starter Essentials",
		42071,
		qsTr("Loading Hair onto Your Character"),
		qsTr("To give her hair, locate and double-click the //Toulouse Hair// icon in the **Smart Content** pane."),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	sActionClass = "DzSaveAction";
	oInstruction = actionSelect(
		sActionClass,
		qsTr("Better Safe than Sorry"),
		qsTr("Before you move on, be sure to save your scene.\n\n" +
			"You can find the ##%1.label## action in the **Main Menu Bar** under the " +
			"##%1.menu## menu or use the ##%1.shortcut## shortcut to save the scene.")
				.arg( sActionClass ),
		"",
		nWidth );
	oInstruction = setOptional( oInstruction, sContinue );
	aInstructions.push( oInstruction );
	
	
	oInstruction = displayMessage(
		qsTr("Congratulations"),
		qsTr("Adding clothing and hair is just that simple.\n\n" +
			"You have now completed the second step in this lesson series!\n\n" +
			"When you are ready, continue to the next lesson, or press " +
			"//Stop [Esc]// below to practice what you have learned."),
		"",
		nWidth,
		qsTr("Continue to III - Adding an Environment") );
	aInstructions.push( oInstruction );
	
	
	oInstruction = lessonSelect(
		"/Guided Tours/I - Getting Started/III - Adding an Environment",
		qsTr("Next Lesson"),
		qsTr("To load an environment, move on to the next lesson."),
		"",
		nWidth );
	aInstructions.push( oInstruction );
	
	
	// Define an array of additionally required files;
	var aRequiredFiles = [
		/*
		requiredAsset(
			"/Default/Figures/People/Female/Real World/Genesis 8 Basic Female.duf",
			"Genesis 8 Starter Essentials",
			42071
		)
		*/
	];
	
	// Process the lesson
	processLesson( aInstructions, aRequiredFiles );
	
// Finalize the function and invoke
})();